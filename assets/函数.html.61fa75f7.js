import{_ as n,o as s,c as a,e as p}from"./app.a35418cc.js";const t={},e=p(`<h1 id="\u516D\u3001\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u516D\u3001\u51FD\u6570" aria-hidden="true">#</a> \u516D\u3001\u51FD\u6570</h1><p>\u51FD\u6570\u662F JavaScript \u5E94\u7528\u7A0B\u5E8F\u7684\u57FA\u7840\uFF0C\u5B83\u5E2E\u52A9\u6211\u4EEC\u5B9E\u73B0\u62BD\u8C61\u5C42\uFF0C\u6A21\u62DF\u7C7B\u7B49\u7B49\u3002\u5728 TypeScript \u91CC\uFF0C\u867D\u7136\u5DF2\u7ECF\u652F\u6301\u7C7B\uFF0C\u547D\u540D\u7A7A\u95F4\u548C\u6A21\u5757\uFF0C\u4F46\u51FD\u6570\u4ECD\u7136\u662F\u4E3B\u8981\u7684\u5B9A\u4E49\u884C\u4E3A\u7684\u5730\u65B9\u3002</p><p>TypeScript \u4E3A JavaScript \u51FD\u6570\u6DFB\u52A0\u4E86\u989D\u5916\u7684\u529F\u80FD\uFF0C\u8BA9\u6211\u4EEC\u53EF\u4EE5\u66F4\u5BB9\u6613\u7684\u4F7F\u7528\u3002</p><h2 id="_1-\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_1-\u793A\u4F8B" aria-hidden="true">#</a> 1. \u793A\u4F8B</h2><p>\u548C JavaScript \u4E00\u6837\uFF0CTypeScript \u51FD\u6570\u53EF\u4EE5\u521B\u5EFA\u6709\u540D\u5B57\u7684\u51FD\u6570\u548C\u533F\u540D\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u547D\u540D\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token comment">// \u533F\u540D\u51FD\u6570</span>
<span class="token keyword">let</span> <span class="token function-variable function">myAdd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="_2-\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_2-\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> 2. \u51FD\u6570\u7C7B\u578B</h2><p>\u53EF\u4EE5\u7ED9\u6BCF\u4E2A\u53C2\u6570\u6DFB\u52A0\u7C7B\u578B\u4E4B\u540E\u518D\u4E3A\u51FD\u6570\u672C\u8EAB\u6DFB\u52A0\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0CTypeScript \u80FD\u591F\u6839\u636E\u8FD4\u56DE\u8BED\u53E5\u81EA\u52A8\u63A8\u65AD\u51FA\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">myAdd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span> 
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="_3-\u53EF\u9009\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_3-\u53EF\u9009\u53C2\u6570" aria-hidden="true">#</a> 3. \u53EF\u9009\u53C2\u6570</h2><p>\u5728 TypeScript \u51FD\u6570\u91CC\uFF0C\u5982\u679C\u5B9A\u4E49\u4E86\u53C2\u6570\uFF0C\u5219\u5FC5\u987B\u4F20\u5165\u8FD9\u4E9B\u53C2\u6570\uFF0C\u9664\u975E\u5C06\u8FD9\u4E9B\u53C2\u6570\u8BBE\u7F6E\u4E3A\u53EF\u9009\uFF0C\u53EF\u9009\u53C2\u6570\u4F7F\u7528\u95EE\u53F7\u6807\u8BC6 <code>?</code>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">buildName</span> <span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> lastName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lastName<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> firstName <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u6B63\u786E</span>
<span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Adams&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sr.&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u9519\u8BEF\uFF0C\u53C2\u6570\u592A\u591A\u4E86</span>
<span class="token keyword">const</span> result3 <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Adams&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u6B63\u786E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="_4-\u9ED8\u8BA4\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_4-\u9ED8\u8BA4\u53C2\u6570" aria-hidden="true">#</a> 4. \u9ED8\u8BA4\u53C2\u6570</h2><p>\u4E5F\u53EF\u4EE5\u8BBE\u7F6E\u53C2\u6570\u7684\u9ED8\u8BA4\u503C\uFF0C\u8FD9\u6837\u5728\u8C03\u7528\u51FD\u6570\u7684\u65F6\u5019\uFF0C\u5982\u679C\u4E0D\u4F20\u5165\u8BE5\u53C2\u6570\u7684\u503C\uFF0C\u5219\u4F7F\u7528\u9ED8\u8BA4\u53C2\u6570\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">calculate_discount</span> <span class="token punctuation">(</span>price<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> rate<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0.50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> discount <span class="token operator">=</span> price <span class="token operator">*</span> rate
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u7B97\u7ED3\u679C: &#39;</span><span class="token punctuation">,</span> discount<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">calculate_discount</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token function">calculate_discount</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">0.30</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="_5-\u5269\u4F59\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_5-\u5269\u4F59\u53C2\u6570" aria-hidden="true">#</a> 5. \u5269\u4F59\u53C2\u6570</h2><p>\u6709\u4E00\u79CD\u60C5\u51B5\uFF0C\u4E0D\u77E5\u9053\u8981\u5411\u51FD\u6570\u4F20\u5165\u591A\u5C11\u4E2A\u53C2\u6570\uFF0C\u8FD9\u65F6\u5019\u5C31\u53EF\u4EE5\u4F7F\u7528\u5269\u4F59\u53C2\u6570\u6765\u5B9A\u4E49\u3002</p><p>\u5269\u4F59\u53C2\u6570\u8BED\u6CD5\u5141\u8BB8\u5C06\u4E00\u4E2A\u4E0D\u786E\u5B9A\u6570\u91CF\u7684\u53C2\u6570\u4F5C\u4E3A\u4E00\u4E2A\u6570\u7EC4\u4F20\u5165\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>restOfName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> restOfName<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
<span class="token keyword">let</span> employeeName <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&quot;Joseph&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Samuel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lucas&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MacKinzie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570\u7684\u6700\u540E\u4E00\u4E2A\u547D\u540D\u53C2\u6570 <code>restOfName</code> \u4EE5 <code>...</code> \u4E3A\u524D\u7F00\uFF0C\u5B83\u5C06\u6210\u4E3A\u4E00\u4E2A\u7531\u5269\u4F59\u53C2\u6570\u7EC4\u6210\u7684\u6570\u7EC4\u3002</p><br><h2 id="_6-\u51FD\u6570\u91CD\u8F7D" tabindex="-1"><a class="header-anchor" href="#_6-\u51FD\u6570\u91CD\u8F7D" aria-hidden="true">#</a> 6. \u51FD\u6570\u91CD\u8F7D</h2><p>\u91CD\u8F7D\u5141\u8BB8\u4E00\u4E2A\u51FD\u6570\u63A5\u53D7\u4E0D\u540C\u6570\u91CF\u6216\u7C7B\u578B\u7684\u53C2\u6570\u65F6\uFF0C\u4F5C\u51FA\u4E0D\u540C\u7684\u5904\u7406\u3002</p><p>\u5B9A\u4E49\u51FD\u6570\u91CD\u8F7D\u9700\u8981\u5B9A\u4E49<strong>\u91CD\u8F7D\u7B7E\u540D</strong>\u548C\u4E00\u4E2A<strong>\u5B9E\u73B0\u7B7E\u540D</strong>\u3002\u91CD\u8F7D\u7B7E\u540D\u5B9A\u4E49\u51FD\u6570\u7684\u5F62\u53C2\u548C\u8FD4\u56DE\u7C7B\u578B\uFF0C\u6CA1\u6709\u51FD\u6570\u4F53\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u91CD\u8F7D\u7B7E\u540D</span>
<span class="token keyword">function</span> <span class="token function">disp</span><span class="token punctuation">(</span>s1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">;</span> 
<span class="token keyword">function</span> <span class="token function">disp</span><span class="token punctuation">(</span>n1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> s1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">;</span> 
 
<span class="token comment">// \u5B9E\u73B0\u7B7E\u540D</span>
<span class="token keyword">function</span> <span class="token function">disp</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> y<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span> 
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token function">disp</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span> 
<span class="token function">disp</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;xyz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5177\u4F53\u793A\u4F8B\uFF1A</p><p>\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570 <code>reverse</code>\uFF0C\u8F93\u5165\u6570\u5B57 123 \u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u53CD\u8F6C\u7684\u6570\u5B57 321\uFF0C\u8F93\u5165\u5B57\u7B26\u4E32 hello \u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u53CD\u8F6C\u7684\u5B57\u7B26\u4E32 olleh\u3002</p><p>\u5229\u7528\u8054\u5408\u7C7B\u578B\uFF0C\u53EF\u4EE5\u8FD9\u4E48\u5B9E\u73B0\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">reverse</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u800C\u8FD9\u6837\u6709\u4E00\u4E2A\u7F3A\u70B9\uFF0C\u5C31\u662F\u4E0D\u80FD\u591F\u7CBE\u786E\u7684\u8868\u8FBE\uFF1A\u8F93\u5165\u4E3A\u6570\u5B57\u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u4E5F\u5E94\u8BE5\u4E3A\u6570\u5B57\uFF0C\u8F93\u5165\u4E3A\u5B57\u7B26\u4E32\u7684\u65F6\u5019\uFF0C\u8F93\u51FA\u4E5F\u5E94\u8BE5\u4E3A\u5B57\u7B26\u4E32\u3002</p><p>\u8FD9\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u91CD\u8F7D\u5B9A\u4E49\u591A\u4E2A <code>reverse</code> \u7684\u51FD\u6570\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">reverse</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reverse</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">reverse</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u51FD\u6570.html.vue"]]);export{r as default};
